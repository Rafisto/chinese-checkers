// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Project Documentation",
            "url": "https://github.com/rafisto/chinese-checkers",
            "email": "rvrelay@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/games": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get all currently active games",
                "responses": {
                    "200": {
                        "description": "Successfully received all active games",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/server.GameResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, missing fields or invalid data",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Create a new game provided its initial parameters",
                "parameters": [
                    {
                        "description": "Initial game parameters",
                        "name": "playerNum",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.CreateGameRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created game",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request, missing fields or invalid data",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/games/{game_id}/join": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Join a game by its ID, provided the username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "game_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Player username",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.JoinGameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully joined the game",
                        "schema": {
                            "$ref": "#/definitions/server.JoinGameResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request, missing fields or invalid data",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/games/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get a game by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scuccessfully received the desired game",
                        "schema": {
                            "$ref": "#/definitions/server.GameResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request, missing fields or invalid data",
                        "schema": {
                            "$ref": "#/definitions/server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Provided the username and game ID create a websocket connection.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully joined the game",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request, missing fields or invalid data",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.CreateGameRequest": {
            "type": "object",
            "properties": {
                "gameVariant": {
                    "type": "string"
                },
                "playerNum": {
                    "type": "integer"
                }
            }
        },
        "server.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "server.GameResponse": {
            "type": "object",
            "properties": {
                "currentPlayers": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "maxPlayers": {
                    "type": "integer"
                },
                "variant": {
                    "type": "string"
                }
            }
        },
        "server.JoinGameRequest": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "server.JoinGameResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0-sprint1",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Chinese Checkers API",
	Description:      "This is the API for the Chinese Checkers game. It allows you to create and join games, and play the game with other players.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
